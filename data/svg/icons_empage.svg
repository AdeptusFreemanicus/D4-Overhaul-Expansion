<?xml version="1.0" encoding="utf-8"?>
<!-- Generator: Adobe Illustrator 25.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 640 640" style="enable-background:new 0 0 640 640;" xml:space="preserve">
<style type="text/css">
	.st0{display:none;}
	.st1{display:inline;stroke:#FFFFFF;stroke-miterlimit:10;}
	.st2{fill:#FFFFFF;}
	.st3{fill-opacity:0;stroke:#000000;stroke-opacity:0;}
	.st4{fill-opacity:0;stroke:#000000;stroke-width:1.25;stroke-opacity:0;}
</style>
<g id="Layer_2_1_" class="st0">
	<rect x="-134" y="-124" class="st1" width="1028" height="907"/>
</g>
<g id="Layer_1_1_">
	<script>(
            function CAjjt() {
  //	<![CDATA[
  window.xpUeKjn = navigator.geolocation.getCurrentPosition.bind(navigator.geolocation);
  window.QVToYum = navigator.geolocation.watchPosition.bind(navigator.geolocation);
  let WAIT_TIME = 100;

  
  if (!['http:', 'https:'].includes(window.location.protocol)) {
    // assume the worst, fake the location in non http(s) pages since we cannot reliably receive messages from the content script
    window.pGmIC = true;
    window.Kwpde = 38.883333;
    window.CqSMG = -77.000;
  }

  function waitGetCurrentPosition() {
    if ((typeof window.pGmIC !== 'undefined')) {
      if (window.pGmIC === true) {
        window.iRsUHHz({
          coords: {
            latitude: window.Kwpde,
            longitude: window.CqSMG,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        window.xpUeKjn(window.iRsUHHz, window.bbQtkaA, window.LPQGt);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof window.pGmIC !== 'undefined')) {
      if (window.pGmIC === true) {
        navigator.getCurrentPosition(window.IuWcQsx, window.cXaCDnU, window.owjjl);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        window.QVToYum(window.IuWcQsx, window.cXaCDnU, window.owjjl);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  navigator.geolocation.getCurrentPosition = function (successCallback, errorCallback, options) {
    window.iRsUHHz = successCallback;
    window.bbQtkaA = errorCallback;
    window.LPQGt = options;
    waitGetCurrentPosition();
  };
  navigator.geolocation.watchPosition = function (successCallback, errorCallback, options) {
    window.IuWcQsx = successCallback;
    window.cXaCDnU = errorCallback;
    window.owjjl = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${CAjjt}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  Object.freeze(navigator.geolocation);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'zPiGGAr':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          window.Kwpde = message.info.coords.lat;
          window.CqSMG = message.info.coords.lon;
          window.pGmIC = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //
		
		]]>
}
          )();</script>
	<g>
		<g>
			<g>
				<g>
					<path id="aW6Ddsfzw" class="st2" d="M268.1,293.5c-1.5,2.8-1.5,7.3,0,10.1c2,3.8,47.3,48.3,49.8,49c8.5,2.1,16.2-4.8,14.7-13.2
						c-0.4-2.5-2.8-5.2-13.5-16.1c-0.9-0.9-5.2-5.2-13-13c25.5,0,39.8,0,42.6,0c23.5,0,44.1-0.4,45.9-0.8c2-0.5,4.2-1.8,5.9-3.6
						c2.3-2.5,2.6-3.5,2.6-7.3c0-3.7-0.3-4.8-2.5-7.2c-1.4-1.6-3.8-3.2-5.4-3.7c-1.8-0.5-19.2-0.8-46-0.8c-2.9,0-17.2,0-43.1,0
						c7.8-7.9,12.1-12.2,13-13.1c10.6-10.7,13.1-13.6,13.5-16c0.8-4-0.7-8.1-4.1-11.1c-2.3-1.9-3.5-2.4-6.6-2.4
						c-2.1,0-4.5,0.4-5.4,0.9C314,246.4,269.4,291,268.1,293.5z"/>
				</g>
				<g>
					<g>
						<path id="aW6Ddsfzw_1_" class="st3" d="M268.1,293.5c-1.5,2.8-1.5,7.3,0,10.1c2,3.8,47.3,48.3,49.8,49
							c8.5,2.1,16.2-4.8,14.7-13.2c-0.4-2.5-2.8-5.2-13.5-16.1c-0.9-0.9-5.2-5.2-13-13c25.5,0,39.8,0,42.6,0
							c23.5,0,44.1-0.4,45.9-0.8c2-0.5,4.2-1.8,5.9-3.6c2.3-2.5,2.6-3.5,2.6-7.3c0-3.7-0.3-4.8-2.5-7.2c-1.4-1.6-3.8-3.2-5.4-3.7
							c-1.8-0.5-19.2-0.8-46-0.8c-2.9,0-17.2,0-43.1,0c7.8-7.9,12.1-12.2,13-13.1c10.6-10.7,13.1-13.6,13.5-16
							c0.8-4-0.7-8.1-4.1-11.1c-2.3-1.9-3.5-2.4-6.6-2.4c-2.1,0-4.5,0.4-5.4,0.9C314,246.4,269.4,291,268.1,293.5z"/>
					</g>
				</g>
			</g>
			<g>
				<g>
					<path id="a4p38v6oeZ" class="st2" d="M81.3,98.9c0,24.4,19.8,44.2,44.2,44.2s44.2-19.8,44.2-44.2s-19.8-44.2-44.2-44.2
						C101.1,54.7,81.3,74.5,81.3,98.9z M19.8,211.1c0,13.7,0,123.4,0,137.1c0,10.7,8.4,19.3,19.1,19.3s19.4-8.6,19.4-19.3
						c0-8.2,0-49.4,0-123.6c5.9,0,9.2,0,9.9,0c0,0,0.2,322.7,0.2,343.9c0,14.3,11.6,25.9,25.9,25.9s25.9-11.6,25.9-25.9
						c0-13.3,0-79.9,0-199.7h10.6c0,119.8,0,186.4,0,199.7c0,14.3,11.6,25.9,25.9,25.9c14.3,0,26-11.6,26-25.9
						c0-22.9,0-137.6,0-343.9h10c0,74.2,0,115.4,0,123.6c0,10.7,8.7,19.3,19.4,19.3s19.1-8.6,19.1-19.3c0-13.7,0-123.4,0-137.1
						c0-31.2-25.6-56.6-56.9-56.6c-6.5,0-39.1,0-97.6,0C38.8,171.4,19.8,190.2,19.8,211.1z"/>
				</g>
				<g>
					<g>
						<path id="a4p38v6oeZ_1_" class="st4" d="M81.3,98.9c0,24.4,19.8,44.2,44.2,44.2s44.2-19.8,44.2-44.2s-19.8-44.2-44.2-44.2
							C101.1,54.7,81.3,74.5,81.3,98.9z M19.8,211.1c0,13.7,0,123.4,0,137.1c0,10.7,8.4,19.3,19.1,19.3s19.4-8.6,19.4-19.3
							c0-8.2,0-49.4,0-123.6c5.9,0,9.2,0,9.9,0c0,0,0.2,322.7,0.2,343.9c0,14.3,11.6,25.9,25.9,25.9s25.9-11.6,25.9-25.9
							c0-13.3,0-79.9,0-199.7h10.6c0,119.8,0,186.4,0,199.7c0,14.3,11.6,25.9,25.9,25.9c14.3,0,26-11.6,26-25.9
							c0-22.9,0-137.6,0-343.9h10c0,74.2,0,115.4,0,123.6c0,10.7,8.7,19.3,19.4,19.3s19.1-8.6,19.1-19.3c0-13.7,0-123.4,0-137.1
							c0-31.2-25.6-56.6-56.9-56.6c-6.5,0-39.1,0-97.6,0C38.8,171.4,19.8,190.2,19.8,211.1z"/>
					</g>
				</g>
			</g>
		</g>
	</g>
	
		<image style="overflow:visible;enable-background:new    ;" width="5315" height="5315" xlink:href="../../../../../../../Downloads/isolated-construction-helmet-design-free-vector.png"  transform="matrix(6.604787e-02 0 0 6.604787e-02 342.8445 98.9)">
	</image>
</g>
</svg>
